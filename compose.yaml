services:
  game:
    build: .
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: db
    volumes:
      - ./src:/app/src
      - ./deno.jsonc:/app/deno.jsonc
      - ./import_map.json:/app/import_map.json
      - ./.env:/app/.env

  smoke_test:
    build:
      context: .
      dockerfile: ./test/Dockerfile
    environment:
      GAME_HOST: game
    profiles:
      - test
    volumes:
      - ./test:/app/test
      - ./deno.jsonc:/app/deno.jsonc
      - ./import_map.json:/app/import_map.json

  db:
    image: postgres:15
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: foo
    volumes:
      - ./db/src:/docker-entrypoint-initdb.d

  migration_generate:
    build: db/migration_generate
    user: "${UID_GID}"
    environment:
      NAME: ${MIGRATION_NAME}
      DATABASE_URL: ${DOCKER_DB_URL}
    profiles:
      - tooling
    volumes:
      - ./db/migration_generate/tusker.toml:/app/tusker.toml
      - ./db/migration_generate/run.sh:/app/run.sh
      - ./db/migrations:/app/migrations
      - ./db/src/:/app/src

  migration_run:
    build: db/migration_run
    environment:
      DATABASE_URL: ${DOCKER_DB_URL}
    profiles:
      - tooling
    volumes:
      - ./db/migration_run/refinery.toml:/app/refinery.toml
      - ./db/migration_run/run.sh:/app/run.sh
      - ./db/migrations:/app/migrations

  dbtypes_generate:
    build: db/type_generate
    user: "${UID_GID}"
    environment:
      DATABASE_URL: ${DOCKER_DB_URL}
    profiles:
      - tooling
    volumes:
      - ./db/type_generate/run.sh:/app/run.sh
      - ./src:/app/output
